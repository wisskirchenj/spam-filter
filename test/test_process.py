
# Generated by CodiumAI

import unittest

import spacy

from spam.preprocess import transform_token


class TestTransformToken(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        cls.nlp = spacy.load('en_core_web_sm')

    #  The function correctly removes punctuation from the input token.
    def test_remove_punctuation(self):
        token = self.nlp("word!")[0]
        transformed_word = transform_token(token)
        self.assertEqual(transformed_word, 'word')

    #  The function correctly lemmatizes the input token.
    def test_lemmatize_token(self):
        token = self.nlp('running')[0]
        transformed_word = transform_token(token)
        self.assertEqual(transformed_word, 'run')

    #  The function correctly identifies and removes stop words from the input token.
    def test_remove_stop_words(self):
        token = self.nlp('the')[0]
        transformed_word = transform_token(token)
        self.assertEqual(transformed_word, '')

    #  The function correctly handles input tokens with digits.
    def test_handle_digits(self):
        token = self.nlp('123')[0]
        transformed_word = transform_token(token)
        self.assertEqual(transformed_word, 'aanumbers')

    #  The function correctly handles input tokens with only one character.
    def test_handle_single_character(self):
        token = self.nlp('a')[0]
        transformed_word = transform_token(token)
        self.assertEqual(transformed_word, '')

    #  The function correctly handles input tokens that are stop words.
    def test_handle_stop_words(self):
        token = self.nlp('is')[0]
        transformed_word = transform_token(token)
        self.assertEqual(transformed_word, '')
